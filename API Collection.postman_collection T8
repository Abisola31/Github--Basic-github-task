{
	"info": {
		"_postman_id": "02c4abee-1c49-41cb-b908-697a7279df41",
		"name": "API Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24226715"
	},
	"item": [
		{
			"name": "Get All Todo Entries",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{Baseurl}}todo",
					"host": [
						"{{Baseurl}}todo"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Entries",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"console.log(jsonData)\r",
							"\r",
							"console.log(jsonData.title)\r",
							"pm.environment.set(\"title\", jsonData.title);\r",
							"\r",
							"console.log(jsonData.apiVersion)\r",
							"pm.environment.set(\"apiVersion\", jsonData.apiVersion);\r",
							"\r",
							"console.log(jsonData.paymentCurrency)\r",
							"pm.environment.set(\"paymentCurrency\", jsonData.paymentCurrency);\r",
							"\r",
							"pm.environment.set(\"variable_key\", \"variable_value\");\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"pm.environment.set(\"variable_key\", \"variable_value\");\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Status code should be 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"console.log(jsonData)\r",
							"\r",
							"console.log(jsonData.apiVersion)\r",
							"pm.test(\"apiVersion should be 6.3.8.0\", function () {\r",
							"\r",
							"    pm.expect(jsonData.apiVersion).to.eql(\"6.3.8.0\");\r",
							"});\r",
							"\r",
							"console.log(jsonData.title)\r",
							"pm.test(\"Title should be should be Fusio\", function () {\r",
							"    \r",
							"    pm.expect(jsonData.title).to.eql(\"Fusio\");\r",
							"});\r",
							"console.log(jsonData.paymentCurrency)\r",
							"pm.test(\"paymentCurrency should be should be EUR\", function () {\r",
							"    \r",
							"    pm.expect(jsonData.paymentCurrency).to.eql(\"EUR\");\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Fusio\");\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"EUR\");\r",
							"})\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"6.3.8.0\");\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Baseurl}}",
					"host": [
						"{{Baseurl}}"
					],
					"query": [
						{
							"key": "Title",
							"value": "{{Title}}",
							"disabled": true
						},
						{
							"key": "apiVersion",
							"value": "{{apiVersion}}",
							"disabled": true
						},
						{
							"key": "paymentCurrency",
							"value": "{{paymentCurrency}}",
							"disabled": true
						}
					]
				},
				"description": "https://demo.fusio-project.org/index.php/"
			},
			"response": []
		},
		{
			"name": "Get entry per ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Baseurl}}todo/?todo_id=2",
					"host": [
						"{{Baseurl}}todo"
					],
					"path": [
						""
					],
					"query": [
						{
							"key": "todo_id",
							"value": "2"
						}
					]
				},
				"description": "https://demo.fusio-project.org/index.php/todo/:todo_id"
			},
			"response": []
		},
		{
			"name": "Get Books",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"console.log(jsonData)\r",
							"const response = pm.response.json();\r",
							"\r",
							"console.log(response[3].id);\r",
							"pm.environment.set(\"TheMidnightLibraryid\", response[3].id);\r",
							"\r",
							"console.log(response[0].id);\r",
							"pm.environment.set(\"TheRussianiD\", response[0].id);\r",
							"\r",
							"\r",
							"console.log(response[0].name)\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Status should be 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							" var jsonData = pm.response.json();\r",
							"console.log(jsonData)\r",
							"\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"name\");\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"The Russian\");\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"fiction\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BaseurlBooks}}Books",
					"host": [
						"{{BaseurlBooks}}Books"
					],
					"query": [
						{
							"key": "type",
							"value": "fiction",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Place a book order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							" var jsonData = pm.response.json();\r",
							" console.log(jsonData)\r",
							"console.log(jsonData.orderId)\r",
							"\r",
							"pm.environment.set(\"orderId\", jsonData.orderId);\r",
							"\r",
							"pm.test(\"Status code should be 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							" \r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"Created\");\r",
							"});\r",
							" \r",
							" var jsonData = pm.response.json();\r",
							" console.log(jsonData)\r",
							"\r",
							"pm.test(\"Created should be true\", function () {\r",
							"\r",
							"    pm.expect(jsonData.created).to.eql(true);\r",
							"});\r",
							"console.log(jsonData.created)\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"true\");\r",
							"});\r",
							"\r",
							"console.log(jsonData.orderId)\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"orderId\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "592148dc043b67e9831962b81d80aa9e39c8a8b372b72de81d0681eb7ff01bb2",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"bookId\": {{TheRussianiD}},\n  \"customerName\": \"John\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BaseurlBooks}}orders",
					"host": [
						"{{BaseurlBooks}}orders"
					],
					"query": [
						{
							"key": "orderId",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all orders",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"console.log(jsonData)\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code should be 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"console.log(jsonData)\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"John\");\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"kcJHJBJFAV3lBa42zY3Zi\");\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(1668518314349);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "592148dc043b67e9831962b81d80aa9e39c8a8b372b72de81d0681eb7ff01bb2",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BaseurlBooks}}orders",
					"host": [
						"{{BaseurlBooks}}orders"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get an order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code should be 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"console.log(jsonData)\r",
							"\r",
							"console.log(jsonData.customerName)\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"John\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "592148dc043b67e9831962b81d80aa9e39c8a8b372b72de81d0681eb7ff01bb2",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"customerName\": \"John\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BaseurlBooks}}orders/:orderId?OrderId={{orderId}}",
					"host": [
						"{{BaseurlBooks}}orders"
					],
					"path": [
						":orderId"
					],
					"query": [
						{
							"key": "OrderId",
							"value": "{{orderId}}"
						},
						{
							"key": null,
							"value": "",
							"disabled": true
						}
					],
					"variable": [
						{
							"key": "orderId",
							"value": "{{orderId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete an order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code should be 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"No Content\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "592148dc043b67e9831962b81d80aa9e39c8a8b372b72de81d0681eb7ff01bb2",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BaseurlBooks}}orders/:orderId",
					"host": [
						"{{BaseurlBooks}}orders"
					],
					"path": [
						":orderId"
					],
					"variable": [
						{
							"key": "orderId",
							"value": "{{orderId}}"
						}
					]
				}
			},
			"response": []
		}
	]
}